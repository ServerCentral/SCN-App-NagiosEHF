#! /bin/sh
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

run_db_update_scripts() {
	DIR=`pwd`
	cd /home/www/notapp-cp/htdocs/db_scripts
	/home/www/notapp-cp/htdocs/db_scripts/create_db_pkg.sh
	if [ "$?" != "0" ]; then
		exit $?
	fi
	/home/www/notapp-cp/htdocs/db_scripts/update_db_pkg.sh
	if [ "$?" != "0" ]; then
		exit $?
	fi
	/home/www/notapp-cp/htdocs/db_scripts/create_stats_db_pkg.sh
	if [ "$?" != "0" ]; then
		exit $?
	fi
	/home/www/notapp-cp/htdocs/db_scripts/update_stats_db_pkg.sh
	if [ "$?" != "0" ]; then
		exit $?
	fi
	cd $DIR
	chmod -R a+w /home/www/notapp-cp/htdocs/cake/app/tmp
}


case "$1" in
    install)
	run_db_update_scripts
    ;;
    configure)
	# add whatever post-install configuration we need here 
	run_db_update_scripts
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

db_stop

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


